---
# tasks file for smarthome

- name: Upgrade packages
  apt: upgrade=dist update_cache=yes

- name: configure WIFI
  copy: src=wpa_supplicant.conf dest=/etc/wpa_supplicant/wpa_supplicant.conf


- name: Enable I2C
  lineinfile:
    path: /boot/config.txt
    regexp: '^dtparam=i2c_arm='
    line: 'dtparam=i2c_arm=on'
  when: pi_family is defined and pi_family=='raspberrypi'
  register: i2c_on

- name: Enable UART
  lineinfile:
    path: /boot/config.txt
    regexp: '^enable_uart='
    line: 'enable_uart=1'
  when: pi_family is defined and pi_family=='raspberrypi'
  register: uart_on

- name: Reboot immediately if there was a change.
  shell: "sleep 5 && reboot"
  async: 1
  poll: 0
  when: i2c_on.changed or uart_on.changed

- name: Wait for the reboot to complete if there was a change.
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: 300
  when: i2c_on.changed or uart_on.changed

- name: Install a list of packages
  apt: "name={{ packages }}"
  vars:
    packages:
    - libavahi-compat-libdnssd-dev
    - python-pip
    - python3-pip
    - g++
    - git
    - make
    - monit
    - i2c-tools
    - tree
    - mc
    - python-smbus
    - autossh

- include_role:
    name: zabbix-agent    

- name: Install wiringpi
  apt: "name=wiringpi"
  when: pi_family is defined and pi_family=='raspberrypi'


- name: Recursively change ownership of a directory
  file:
    path: /var/lib/smarthome
    state: directory
    recurse: yes
    owner: root
    group: root
    
- name: Copy zabbix script
  copy:
    src: zabbix_send.py
    dest: /var/lib/smarthome/zabbix_send.py
    owner: root
    group: root


- name: Add Nodesource apt key.
  apt_key:
    url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
    id: "68576280"
    state: present

- name: Ensure apt-transport-https is installed.
  apt: name=apt-transport-https state=present

- name: Add NodeSource repositories for Node.js.
  apt_repository:
    repo: "{{ item }}"
    state: present
  with_items:
    - "deb https://deb.nodesource.com/node_10.x {{ ansible_distribution_release }} main"
    - "deb-src https://deb.nodesource.com/node_10.x {{ ansible_distribution_release }} main"
  register: node_repo

- name: Update apt cache if repo was added.
  apt: update_cache=yes
  when: node_repo.changed

- name: Ensure Node.js and npm are installed.
  apt: "name=nodejs=10* state=present"

- name: Install npm modules
  shell: "npm list -g | grep {{item}} || npm install -g {{item}} --unsafe-perm"
  with_items:
    - sqlite3
    - moment
    - fakegato-history
    - homebridge


- name: Checkout smarthome repo
  git:
    repo: 'https://github.com/ostin654/smarthome.git'
    dest: ~/smarthome
  become: no


- name: Link floorheat
  shell: "npm link --unsafe-perm"
  args:
    chdir: "/home/{{ansible_env.SUDO_USER}}/smarthome/plugins/homebridge-kostinfloorheat"

- name: Link modules for floorheat
  shell: "npm link {{item}}"
  with_items:
    - fs
    - sqlite3
    - moment
    - fakegato-history
  args:
    chdir: "/home/{{ansible_env.SUDO_USER}}/smarthome/plugins/homebridge-kostinfloorheat"



- name: Add system user homebridge
  user: name=homebridge system=yes

- name: make homebridge dir
  file: name=/var/lib/homebridge state=directory owner=homebridge recurse=yes

- name: copy homebridge config
  copy: src=config.json dest=/var/lib/homebridge/config.json owner=homebridge

- name: copy homebridge defaults
  copy: src=homebridge.def dest=/etc/default/homebridge
  register: systemd_defaults

- name: copy homebridge service
  copy: src=homebridge.srv dest=/etc/systemd/system/homebridge.service
  register: systemd_service

- name: just force systemd to reread configs
  systemd: daemon_reload=yes
  when: systemd_defaults.changed or systemd_service.changed


- name: make smarthome dir
  file: name=/var/lib/smarthome state=directory mode=0755 owner=root group=root

- name: Create target state file
  file: name=/var/lib/smarthome/floorheat_target_state state=touch mode=0666 owner=root group=root

- name: Create target temp file
  file: name=/var/lib/smarthome/floorheat_target_temp state=touch mode=0666 owner=root group=root

- name: Install python 2 modules
  pip:
    name:
      - GPIO
      - RPIO
      - datetime
  when: pi_family is defined and pi_family=='raspberrypi'

- name: Install python 3 modules
  pip:
    executable: pip3
    name:
      - GPIO
      - RPIO
      - datetime
  when: pi_family is defined and pi_family=='raspberrypi'


- name: Make sure homebridge is running
  systemd: state=started name=homebridge enabled=yes
